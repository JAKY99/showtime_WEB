name: workflow staging
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Deploy staging'
        required: true
        default: 'latest'
jobs:
  sonarqube-test:
    environment: staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: sonarqubeScan
        run: |
          mv staging.sonar-project.properties sonar-project.properties
          sed -i "s/sonar.login=/sonar.login=$sonar_login/g" sonar-project.properties
          sed -i "s/sonar.password=/sonar.login=$sonar_password/g" sonar-project.properties
          npm ci &&  ng test --code-coverage --watch=false
          npm run sonar
    env:
      sonar_login: ${{ secrets.SONAR_LOGIN }}
      sonar_password: ${{ secrets.SONAR_PASSWORD }}
  staging-deploy:
    needs: sonarqube-test
    environment: staging
    runs-on: ubuntu-latest
    container:
      image: kevinpsirius/pipeline_deployment_image:v10
      env:
        sshKey: ${{ secrets.SSH_KEY }}
    steps:
      - name: Generate new dist for staging
        run: |
          cd /var/www/html && git clone https://github.com/JAKY99/showtime_WEB.git
          cd /var/www/html/showtime_WEB && node --max-old-space-size=2048 $(which npm) i && ng test --watch=false && node --max-old-space-size=2048 $(which ng) build --configuration staging --base-href /admin/ --source-map=false --build-optimizer=false --optimization=false --progress=false --statsJson=false  --aot=true --showCircularDependencies=false --namedChunks=false --outputHashing=none --vendorChunk=false

      - name: Generate SSH connection to server with ansible for staging
        run: |
          touch /var/www/html/mypckey.pem &&  chmod 600 /var/www/html/mypckey.pem && echo "$sshKey" >> /var/www/html/mypckey.pem
          cd /var/www/html/showtime_WEB/playbook && ansible-playbook deploy-dev-admin-front.yml -e "ansible_ssh_timeout=180"
